---
# do not edit starts
jupyter: python3
toc: true
execute: 
  freeze: auto
  echo: false
format:
  html:
    code-fold: true
    template: template/template.html
    template-partials: 
      - template/title-block.html
# do not edit ends
title: "Senegalese Slave Liberations Project"
session: "Spring 2024"
project-members:
  - name: Professor Richard Roberts
    designation: Professor of History, Emeritus
    orcid: https://orcid.org/0000-0000-0000-0000
  - name: Vernita Zhai
    designation: Intern - Spring, 2024
    orcid: https://orcid.org/0000-0000-0000-0000

project-description: "The Senegalese Slave Liberations Project builds on the Slave Voyages Database, which has transformed the study of the trans-Atlantic slave trade by presenting the most comprehensive collection of individual slave trade voyages and the most complete set of evidence of African ports of embarkation and American ports of disembarkation. The Slave Voyages Database, however, tells us virtually nothing about slavery and the slave trade within Africa. The Senegalese Slave Liberations Project provides a crucial counterpart to the Slave Voyages project in presenting evidence of slavery and the slave trade in the Senegambian, Mauritanian, and Malian region of West Africa during the second half of the nineteenth century. Specifically, registers of liberation have survived as records of enslaved people under French colonial authority who sought their freedom. The project team is working to provide unique identifications for each case of liberation, analyze the data, and develop visualizations to support academic research and innovative pedagogy."

---
# Transcribing Liberation Cases
:::{.article-author}
Vernita Zhai
:::
My Spring Quarter internship with the Senegalese Slave Liberations Project revolved around two main components: expanding the project database of slave liberation records, and enhancing the accessibility and richness of the project website through gathering and creating visual materials. 

For the data entry portion of my internship, I focused on transcribing liberation records from the digitized register of 1058 cases from the year 1882 onto the project's database spreadsheet, recording each liberated individual’s name, age, place of birth, parents’ names, place of liberation within colonial Senegal, date of liberation, authorizing administrator, and, in the case of minors, guardian name and occupation (see Figure 1). Building upon the work of previous interns, I paid particular attention to the familial connections among liberated individuals and identified sibling relations as a new point of interest to be noted alongside parental relations. The main challenge posed by data entry was no doubt deciphering the sometimes illegible, ambiguous, or inconsistent 19th-century French cursive handwriting of the register, but with reference to the document’s index, previous data entry records, and initial assistance from Becca, a former intern, I quickly became comfortable navigating the script. Moreover, the inconsistencies and ambiguities in the script often turned out to be fruitful, offering valuable insights into the orthographic conventions of the time and the challenges that arise from the phonetic conversion of local Senegalese dialects into French.

![Figure 1. A page from the Registers of Slave Liberation in Colonial Senegal document held at the National Archives of Senegal in Dakar, featuring liberation cases from April 1882. The Registers of Liberation consist of twenty ledgers containing records of 28,930 liberations that occurred between 1857 and 1903. While the format of data entry evolved through the years, this featured page provides a representative glimpse into the entry system employed by the colonial administration.](data/imgs/Figure 1.png)

# Visualizing Liberation Cases
:::{.article-author}
Vernita Zhai
:::
As a central aim of the Senegalese Slave Liberation Project is to make the primary data on liberation available for scholarly and pedagogical use, another crucial component of my work this quarter involved gathering and creating visualizations to be incorporated into the project’s website. Drawing upon sources such as Giulia Paoletti’s Portrait and Place: Photography in Senegal, 1840–1960, and archives from the photographic department of the Archives nationales d'outre-mer in Aix-en-Provence, I curated a series of photographs and maps of colonial Senegal (see Figures 2 and 3). These images will be used to accompany and enrich the project website, which contains articles on the history of slavery in Senegal as well as broader discussions of freedom and unfreedom in a global context. In addition to sourcing photographs, I worked on converting subsets of the transcribed data into accessible and aesthetically engaging visualizations. Together, these various visual elements contribute towards the team’s ongoing efforts to enhance the availability and legibility of the Registers of Slave Liberation in Colonial Segal—a rich, sprawling, yet underused primary database—for a wider audience.

![Figure 2. A panoramic photograph of Saint-Louis—the capital of the French colony of Senegal from 1673 to 1902—taken by A. Jacques and originally published in the album Souvenirs du Sénégal, 1866–1867. The photograph is featured in Portrait and Place: Photography in Senegal, 1840–1960 by Giulia Paoletti (2024), one of the secondary sources that I consulted in gathering visual materials for the project website.](data/imgs/Figure 2.png)


![Figure 3. Maps of French colonies in Senegal and the islands of Mayotte, Nosy-Be and Sainte-Marie-de-Madagascar (modern-day Madagascar), overlaying an indigenous landscape. A chromolithograph card published in 1890, the illustration will be added to the collection of maps currently displayed on the project website.](data/imgs/Figure 3.jpg)


![Figure 4. Most preferred destinations of liberated individuals in April 1882, ordered by descending popularity and color-coded by region. The desired destination of liberated individuals was a category that had been included in the first liberation registers of 1857, but omitted for many years since and not reinstated until 1882. Visualization created using Tableaux.](data/imgs/Figure 4.png)





## Authoring features of Quarto
In this section, let's see some of the authoring features of Quarto.


### Callouts

Quarto allows different types of callouts to emphasize the content.

::: {.callout-note}
Note that there are five types of callouts, including:
`note`, `warning`, `important`, `tip`, and `caution`.
:::

::: {.callout-tip}
## Tip with Title
This is an example of a callout with a title.
:::

::: {.callout-caution collapse="true"}
## Expand To Learn About Collapse
This is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse="true"` to collapse it by default or `collapse="false"` to make a collapsible callout that is expanded by default.
:::


### Figures
In Quarto, figures can be easily imported using the markdown syntax, given the image is stored in the codebase. You can see the example given below.


![Maps of French colonies in Senegal and the islands of Mayotte, Nosy-Be and Sainte-Marie-de-Madagascar (modern-day Madagascar), overlaying an indigenous landscape. A chromolithograph card published in 1890, the illustration will be added to the collection of maps currently displayed on the project website.](data/imgs/Figure 1.png)


Below is a full column image.

:::{.column-page}
![](data/imgs/placeholder.jpg)
:::



### Tables
In Quarto, tables can be easily created using the pipe table markdown syntax. You can see the example given below.

| Default | Left | Right | Center |
|---------|:-----|------:|:------:|
| 12      | 12   |    12 |   12   |
| 123     | 123  |   123 |  123   |
| 1       | 1    |     1 |   1    |

: Demonstration of pipe table syntax


### Diagrams
Quarto allows natively the authors to create diagrams using Mermaid and Graphviz. Check the [official documentation](https://quarto.org/docs/authoring/diagrams.html) for more details.

Below is an example of a Mermaid diagram.
```{mermaid}
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]
```

### Videos
In Quarto, videos can be embedded from both locally and remote sources such as YouTube and Vimeo.
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}

### Appendices and Footnotes
Quarto allows the authors to create appendices and footnotes easily.

#### Appendix
In Quarto, appendices can be created using the `.appendix` class. The appendix section is placed at the end of the document and is not included in the table of contents.

##### Appendix Example {.appendix}
Here is an example of an appendix.

#### Footnote
Here is a footnote reference,[^1] and another.[^longnote]

[^1]: Here is the footnote.

[^longnote]: Here's one with multiple blocks.

    Subsequent paragraphs are indented to show that they
belong to the previous footnote.

    The whole paragraph can be indented, or just the first
    line.  In this way, multi-paragraph footnotes work like
    multi-paragraph list items.




# Title of Article 2
:::{.article-author}
Joe Doe
:::

This article focuses on the computational capabilities of Quarto.  


## Visualizations
Quarto allows the users to run Python and R code directly in the page and get their output. This means that cool and interactive visualizations generated using Python or R can be rendered directly in the page. Please ensure that the essential library dependencies are installed to render the visualizations. For example, the following visualization requires `plotly` library which is installed along with the requirements. Whenever you install a new library, don't forget to add it to `requirements.txt`.

Whenever an interactive visualization is added, an equivalent static image alternative should also be added for the Anthology print version. Refer to the code below.

The content below will appear only in the html version.

::: {.content-visible when-format="html"}
### Interactive Plotly Chart
For a demonstration of a Plotly chart, see @fig-example.

```{python}
#| label: fig-example
#| fig-cap: Example Interactive Plotly Chart
import plotly.express as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_width", y="sepal_length", color="species",
                 size='petal_length', hover_data=['petal_width'])
fig.show()
```
:::

The content below will appear only in the pdf output but not in the html version.

::: {.content-visible when-format="pdf"}
The below content will appear only in PDF format.
![](data/imgs/placeholder.jpg)
:::

## Observable
Similar to Python and R code, Quarto is also capable of handling Observable. Please refer to the [official documentation](https://quarto.org/docs/computations/ojs.html) for more details.